
imagePullSecrets: []
nameOverride: ""
fullnameOverride: "zipkin"
envs: 
  - name: QUERY_PORT
    value: 9411
commands: []
args: []
ports: 
  - name: http
    containerPort: 9411
    protocol: TCP
collector:
  statefulset:
    enabled: true
  strategy: RollingUpdate
  replicaCount: 1
  image:
    repository: openzipkin/zipkin
    tag: "2.21.0" # defaults to Chart.AppVersion unless this is set
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9411
    targetPort: http
    name: http
    protocol: TCP
  ingress:
    enabled: true
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  persistentVolume:   # 是否存储持久化
    enabled: true
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, azure-disk on
    ##   Azure, standard on GKE, AWS & OpenStack)
    ##
    storageClass: "-"
    accessMode: ReadWriteOnce
    annotations: {}
    #   helm.sh/resource-policy: keep
    size: 1Gi  # 大小
    existingClaim: {}  # 使用已存在的pvc
    mountPaths: []
    #  - name: config
    #    mountPath: /config
    #    subPath: config
    #  - name: data-storage
    #    mountPath: /data
    #    subPath: data

ui:
  replicaCount: 1
  image:
    repository: openzipkin/zipkin-ui
    tag: "2.21.0" # defaults to Chart.AppVersion unless this is set
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
    targetPort: http
    name: http
    protocol: TCP
  ingress:
    enabled: true
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  podAnnotations: {}
  
  podSecurityContext: {}
    # fsGroup: 2000
  
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80

dependencies:
  elasticsearch:
    # if enabled set "false", fill the connection informations in "external" section
    enabled: true
    ## 使用外部ES或者使用其它存储方式，以下为环境变量定义
    external:
      STORAGE_TYPE: "elasticsearch"
      ES_HOSTS: "elasticsearch-client.devops:9200"
  enabled: true

  cron: "* 0 * * *"

  image:
    repository: openzipkin/zipkin-dependencies
    tag: "2.6.4"
    pullPolicy: IfNotPresent

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}
     

